/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package textileproject;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.channels.FileLock;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

import javax.swing.filechooser.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author H3RK3S
 */
public class TextileProject extends javax.swing.JFrame {

    /**
     * Creates new form TextileProject
     */
    public TextileProject() {
        
        modelDukkandakiUrunler = new DefaultTableModel();
        modelDukkandakiUrunler.setColumnIdentifiers(columnsDukkandakiUrunler);
        dukkandakiUrunler = new DukkandakiUrunler();
        aksesuarDurumu = new AksesuarDurumu();
        model = new DefaultTableModel();
        
        modelEtiket = new DefaultTableModel();
        modelKart = new DefaultTableModel();
        modelArma = new DefaultTableModel();
        modelModelBilgi = new DefaultTableModel();
        chooserlabel = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter(
            "Image files", "jpg", "jpeg", "gif");
        chooserlabel.setFileFilter(filter);
        chooserlabel.setAccessory(new ImagePreviewer(chooserlabel));
        chooserlabel.setFileView(new FileIconView(filter, new ImageIcon("cyan-ball.gif")));
        initComponents();
        buttonMaliyetHesaplama.setIcon(buttonIconAyarlama("maaliyetHesaplama.png", buttonMaliyetHesaplama));
       /* final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tableDukkandakiUrunler.setRowSorter(sorter);
        sorter.setSortable(0, false);
          */     

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KumasAdetDialog = new javax.swing.JDialog(this,"Kumaş Durumu",true);
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        buttonKumasEkle = new javax.swing.JButton();
        buttonTabloyuYükle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        KumasEkleDialog = new javax.swing.JDialog(KumasAdetDialog,"Kumaş Ekle",true);
        jPanel3 = new javax.swing.JPanel();
        labelKumasTuruGiriniz = new javax.swing.JLabel();
        textFieldKumasTuruAdi = new javax.swing.JTextField();
        labelKumasRengiGiriniz = new javax.swing.JLabel();
        textFieldKumasRengiAdi = new javax.swing.JTextField();
        textFieldKumasSayisi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tamamButon = new javax.swing.JButton();
        dialogAksesuarDurumu = new javax.swing.JDialog(this,"Aksesuar Durumu",true);
        panelAksesuarDurumu = new javax.swing.JPanel();
        comboBoxAksesuarCesitleri = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableAksesuarlar = new javax.swing.JTable();
        buttonAksesuarEkle = new javax.swing.JButton();
        buttonAksesuarTabloYukle = new javax.swing.JButton();
        dialogFermuarEkle = new javax.swing.JDialog(dialogAksesuarDurumu,true);
        jPanel4 = new javax.swing.JPanel();
        labelFermuarBoyu = new javax.swing.JLabel();
        textFieldFermuarBoyu = new javax.swing.JTextField();
        labelFermuarRengi = new javax.swing.JLabel();
        textFieldFermuarRengi = new javax.swing.JTextField();
        textFieldFermuarAdet = new javax.swing.JTextField();
        labelFermuarAdet = new javax.swing.JLabel();
        buttonTamamFermuar = new javax.swing.JButton();
        dialogAksesuarEkle = new javax.swing.JDialog(dialogAksesuarDurumu,true);
        labelAksesuarTuru = new javax.swing.JLabel();
        textFieldAksesuarTuru = new javax.swing.JTextField();
        labelAksesuarSayisi = new javax.swing.JLabel();
        textFieldAksesuarSayisi = new javax.swing.JTextField();
        buttonAksesuarTamam = new javax.swing.JButton();
        dialogDukkandakiUrunler = new javax.swing.JDialog(this,"Dükkandaki Ürünler",true);
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDukkandakiUrunler = new javax.swing.JTable();
        labelUrunResim = new javax.swing.JLabel();
        buttonFotoDegistir = new javax.swing.JButton();
        buttonDukkandakiUruneModelEkle = new javax.swing.JButton();
        buttonDukkankadiUrunlerTabloSil = new javax.swing.JButton();
        dialogDukkanaUrunEkle = new javax.swing.JDialog(dialogDukkandakiUrunler,"Ürün ekle",true);
        jPanel6 = new javax.swing.JPanel();
        labelDukkanaUrunModelIsmi = new javax.swing.JLabel();
        labelDukkanaUrunKumasTuru = new javax.swing.JLabel();
        labelDukkanaUrunBedenSayısı = new javax.swing.JLabel();
        labelDukkanaUrunToplamAdet = new javax.swing.JLabel();
        buttonDukkanaUrunEkleTamam = new javax.swing.JButton();
        textfieldDukkanaUrunModelIsmi = new javax.swing.JTextField();
        textfieldDukkanaUrunKumasTuru = new javax.swing.JTextField();
        textfieldDukkanaUrunBedenSayisi = new javax.swing.JTextField();
        textfieldDukkanaUrunToplamAdet = new javax.swing.JTextField();
        labelDukkandakiUrunModelResmi = new javax.swing.JLabel();
        buttonDukkanaUrunModelResmiSec = new javax.swing.JButton();
        dialogMaliyetHesaplama = new javax.swing.JDialog(this,"Maliyet Hesaplama",true);
        panelModelEkleme = new javax.swing.JPanel();
        buttonModelEkle = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableModelBilgileri = new javax.swing.JTable();
        buttonModelBilgileriDüzenle = new javax.swing.JButton();
        buttonModelSil = new javax.swing.JButton();
        dialogModelEkleme = new javax.swing.JDialog(dialogMaliyetHesaplama,"Model Ekle",true);
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        textFieldKumasBirimFiyat = new javax.swing.JTextField();
        textFieldAstarBirimFiyat = new javax.swing.JTextField();
        textFieldAstarMetreFiyat = new javax.swing.JTextField();
        textFieldKumasMetreFiyat = new javax.swing.JTextField();
        textFieldPolarBirimFiyat = new javax.swing.JTextField();
        textFieldModelIsmi = new javax.swing.JTextField();
        textFieldPolarMetreFiyat = new javax.swing.JTextField();
        textFieldRibanaVbMaliyet = new javax.swing.JTextField();
        textFieldFermuarFiyat = new javax.swing.JTextField();
        textFieldAksesuarFiyat = new javax.swing.JTextField();
        textFieldFasonFiyat = new javax.swing.JTextField();
        buttonModelMaliyetEkle = new javax.swing.JButton();
        labelKumasBirimFiyatUyarı = new javax.swing.JLabel();
        labelFermuarToplamFiyat = new javax.swing.JLabel();
        labelAksesuarMaliyet = new javax.swing.JLabel();
        labelGidenKumas = new javax.swing.JLabel();
        labelAstarBirimFiyat = new javax.swing.JLabel();
        labelModelIsmi = new javax.swing.JLabel();
        labelFasonMaliyet = new javax.swing.JLabel();
        labelGidenAstarFiyat = new javax.swing.JLabel();
        labelPolarBirimFiyat = new javax.swing.JLabel();
        labelGidenPolarFiyat = new javax.swing.JLabel();
        labelRibanaVbFiyat = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        buttonKumasTopuEkle = new javax.swing.JButton();
        buttonAksesuarDurumu = new javax.swing.JButton();
        buttonDukkandakiUrunler = new javax.swing.JButton();
        buttonMaliyetHesaplama = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        KumasAdetDialog.addWindowListener(new WindowsFermuarListener(file, model));

        jLabel2.setText("Kumaş Türü Ekle");

        buttonKumasEkle.setText("Ekle");
        buttonKumasEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKumasEkleActionPerformed(evt);
            }
        });

        buttonTabloyuYükle.setText("Tablo Yükle");
        buttonTabloyuYükle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTabloyuYükleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonKumasEkle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonTabloyuYükle, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonKumasEkle)
                    .addComponent(buttonTabloyuYükle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table.setModel(model
        );
        model.setColumnIdentifiers(KumasTopucolumns);
        table.setModel(model);
        jScrollPane1.setViewportView(table);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 131, 255));
        jLabel19.setText("Sütun sil");

        jButton1.setText("Sil");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KumasAdetDialogLayout = new javax.swing.GroupLayout(KumasAdetDialog.getContentPane());
        KumasAdetDialog.getContentPane().setLayout(KumasAdetDialogLayout);
        KumasAdetDialogLayout.setHorizontalGroup(
            KumasAdetDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
            .addGroup(KumasAdetDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        KumasAdetDialogLayout.setVerticalGroup(
            KumasAdetDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KumasAdetDialogLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KumasAdetDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        labelKumasTuruGiriniz.setText("Kumaş Türünü Giriniz");

        textFieldKumasTuruAdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldKumasTuruAdiActionPerformed(evt);
            }
        });

        labelKumasRengiGiriniz.setText("Kumaş Rengini Giriniz");

        textFieldKumasRengiAdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldKumasRengiAdiActionPerformed(evt);
            }
        });

        jLabel3.setText("Kumaş Sayısını Giriniz");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelKumasRengiGiriniz)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelKumasTuruGiriniz, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldKumasSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(textFieldKumasRengiAdi)
                        .addComponent(textFieldKumasTuruAdi, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textFieldKumasSayisi, textFieldKumasTuruAdi});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, labelKumasRengiGiriniz, labelKumasTuruGiriniz});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelKumasTuruGiriniz)
                    .addComponent(textFieldKumasTuruAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelKumasRengiGiriniz)
                    .addComponent(textFieldKumasRengiAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldKumasSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {textFieldKumasRengiAdi, textFieldKumasSayisi, textFieldKumasTuruAdi});

        tamamButon.setText("Tamam");
        tamamButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tamamButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KumasEkleDialogLayout = new javax.swing.GroupLayout(KumasEkleDialog.getContentPane());
        KumasEkleDialog.getContentPane().setLayout(KumasEkleDialogLayout);
        KumasEkleDialogLayout.setHorizontalGroup(
            KumasEkleDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(tamamButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        KumasEkleDialogLayout.setVerticalGroup(
            KumasEkleDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KumasEkleDialogLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tamamButon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.getAccessibleContext().setAccessibleParent(jPanel3);

        dialogAksesuarDurumu.addWindowListener(new WindowsFermuarListener(fileFermuar, modelFermuar));
        dialogAksesuarDurumu.addWindowListener(new WindowsFermuarListener(fileEtiket, modelEtiket));
        dialogAksesuarDurumu.addWindowListener(new WindowsFermuarListener(fileKart, modelKart));
        dialogAksesuarDurumu.addWindowListener(new WindowsFermuarListener(fileArma, modelArma));

        comboBoxAksesuarCesitleri.setModel(new javax.swing.DefaultComboBoxModel<>());
        comboBoxAksesuarCesitleri.addItem("Fermuar");
        comboBoxAksesuarCesitleri.addItem("Etiket");
        comboBoxAksesuarCesitleri.addItem("Kart");
        comboBoxAksesuarCesitleri.addItem("Arma");
        comboBoxAksesuarCesitleri.setSelectedIndex(0);
        getName = comboBoxAksesuarCesitleri.getItemAt(comboBoxAksesuarCesitleri.getSelectedIndex());
        comboBoxAksesuarCesitleri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAksesuarCesitleriActionPerformed(evt);
            }
        });

        jLabel5.setText("Aksesuarlar :");

        tableAksesuarlar.setModel(new javax.swing.table.DefaultTableModel());
        tableAksesuarlar.setSelectionForeground(new java.awt.Color(0, 204, 204));
        jScrollPane4.setViewportView(tableAksesuarlar);

        buttonAksesuarEkle.setText("Aksesuar Ekle");
        buttonAksesuarEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAksesuarEkleActionPerformed(evt);
            }
        });

        buttonAksesuarTabloYukle.setText("Tablo Sil");
        buttonAksesuarTabloYukle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAksesuarTabloYukleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAksesuarDurumuLayout = new javax.swing.GroupLayout(panelAksesuarDurumu);
        panelAksesuarDurumu.setLayout(panelAksesuarDurumuLayout);
        panelAksesuarDurumuLayout.setHorizontalGroup(
            panelAksesuarDurumuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAksesuarDurumuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBoxAksesuarCesitleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAksesuarTabloYukle)
                .addGap(50, 50, 50)
                .addComponent(buttonAksesuarEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
        panelAksesuarDurumuLayout.setVerticalGroup(
            panelAksesuarDurumuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAksesuarDurumuLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelAksesuarDurumuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboBoxAksesuarCesitleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAksesuarEkle)
                    .addComponent(buttonAksesuarTabloYukle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        javax.swing.GroupLayout dialogAksesuarDurumuLayout = new javax.swing.GroupLayout(dialogAksesuarDurumu.getContentPane());
        dialogAksesuarDurumu.getContentPane().setLayout(dialogAksesuarDurumuLayout);
        dialogAksesuarDurumuLayout.setHorizontalGroup(
            dialogAksesuarDurumuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAksesuarDurumu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogAksesuarDurumuLayout.setVerticalGroup(
            dialogAksesuarDurumuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAksesuarDurumu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        labelFermuarBoyu.setText(" adetini giriniz ");

        textFieldFermuarBoyu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFermuarBoyuActionPerformed(evt);
            }
        });

        labelFermuarRengi.setText("Kullanıcı kararı");

        textFieldFermuarRengi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFermuarRengiActionPerformed(evt);
            }
        });

        labelFermuarAdet.setText("Kullanıcı kararı");

        buttonTamamFermuar.setText("Tamam");
        buttonTamamFermuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTamamFermuarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFermuarBoyu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelFermuarRengi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelFermuarAdet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textFieldFermuarBoyu, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(textFieldFermuarAdet)
                    .addComponent(textFieldFermuarRengi))
                .addGap(31, 31, 31))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(buttonTamamFermuar, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFermuarBoyu)
                    .addComponent(textFieldFermuarBoyu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFermuarRengi)
                    .addComponent(textFieldFermuarRengi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFermuarAdet)
                    .addComponent(textFieldFermuarAdet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(buttonTamamFermuar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout dialogFermuarEkleLayout = new javax.swing.GroupLayout(dialogFermuarEkle.getContentPane());
        dialogFermuarEkle.getContentPane().setLayout(dialogFermuarEkleLayout);
        dialogFermuarEkleLayout.setHorizontalGroup(
            dialogFermuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dialogFermuarEkleLayout.setVerticalGroup(
            dialogFermuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        textFieldAksesuarSayisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAksesuarSayisiActionPerformed(evt);
            }
        });

        buttonAksesuarTamam.setText("Tamam");
        buttonAksesuarTamam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAksesuarTamamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogAksesuarEkleLayout = new javax.swing.GroupLayout(dialogAksesuarEkle.getContentPane());
        dialogAksesuarEkle.getContentPane().setLayout(dialogAksesuarEkleLayout);
        dialogAksesuarEkleLayout.setHorizontalGroup(
            dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAksesuarEkleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelAksesuarSayisi, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(labelAksesuarTuru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textFieldAksesuarTuru)
                    .addComponent(textFieldAksesuarSayisi, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(buttonAksesuarTamam, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        );
        dialogAksesuarEkleLayout.setVerticalGroup(
            dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAksesuarEkleLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAksesuarTuru)
                    .addComponent(textFieldAksesuarTuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogAksesuarEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAksesuarSayisi)
                    .addComponent(textFieldAksesuarSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(buttonAksesuarTamam, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dialogDukkandakiUrunler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dialogDukkandakiUrunlerMousePressed(evt);
            }
        });

        tableDukkandakiUrunler.setModel(modelDukkandakiUrunler);
        tableDukkandakiUrunler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDukkandakiUrunlerMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableDukkandakiUrunlerMousePressed(evt);
            }
        });
        tableDukkandakiUrunler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableDukkandakiUrunlerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tableDukkandakiUrunlerKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(tableDukkandakiUrunler);

        buttonFotoDegistir.setText("Fotoğrafı Değiştir");
        buttonFotoDegistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFotoDegistirActionPerformed(evt);
            }
        });

        buttonDukkandakiUruneModelEkle.setText("Model Ekle");
        buttonDukkandakiUruneModelEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDukkandakiUruneModelEkleActionPerformed(evt);
            }
        });

        buttonDukkankadiUrunlerTabloSil.setText("Tablo Sil");
        buttonDukkankadiUrunlerTabloSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDukkankadiUrunlerTabloSilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonFotoDegistir, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(buttonDukkandakiUruneModelEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonDukkankadiUrunlerTabloSil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUrunResim, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonFotoDegistir)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDukkandakiUruneModelEkle)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDukkankadiUrunlerTabloSil)
                        .addGap(18, 31, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(labelUrunResim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dialogDukkandakiUrunlerLayout = new javax.swing.GroupLayout(dialogDukkandakiUrunler.getContentPane());
        dialogDukkandakiUrunler.getContentPane().setLayout(dialogDukkandakiUrunlerLayout);
        dialogDukkandakiUrunlerLayout.setHorizontalGroup(
            dialogDukkandakiUrunlerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dialogDukkandakiUrunlerLayout.setVerticalGroup(
            dialogDukkandakiUrunlerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        labelDukkanaUrunModelIsmi.setText("Model ismi :");

        labelDukkanaUrunKumasTuru.setText("Kumaş Türü :");

        labelDukkanaUrunBedenSayısı.setText("Beden Sayısı :");

        labelDukkanaUrunToplamAdet.setText("Toplam Adet :");

        buttonDukkanaUrunEkleTamam.setText("Tamam");
        buttonDukkanaUrunEkleTamam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDukkanaUrunEkleTamamActionPerformed(evt);
            }
        });

        textfieldDukkanaUrunModelIsmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldDukkanaUrunModelIsmiActionPerformed(evt);
            }
        });

        labelDukkandakiUrunModelResmi.setText("Model Resmi :");

        buttonDukkanaUrunModelResmiSec.setText("Seç");
        buttonDukkanaUrunModelResmiSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDukkanaUrunModelResmiSecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonDukkanaUrunEkleTamam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelDukkanaUrunToplamAdet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(labelDukkanaUrunBedenSayısı, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDukkanaUrunKumasTuru, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDukkanaUrunModelIsmi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDukkandakiUrunModelResmi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDukkanaUrunModelResmiSec)
                    .addComponent(textfieldDukkanaUrunToplamAdet, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunBedenSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunKumasTuru, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDukkanaUrunModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDukkanaUrunKumasTuru, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunKumasTuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDukkanaUrunBedenSayısı, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunBedenSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDukkanaUrunToplamAdet, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldDukkanaUrunToplamAdet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDukkandakiUrunModelResmi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDukkanaUrunModelResmiSec))
                .addGap(18, 18, 18)
                .addComponent(buttonDukkanaUrunEkleTamam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelDukkanaUrunBedenSayısı, labelDukkanaUrunKumasTuru, labelDukkanaUrunModelIsmi, labelDukkanaUrunToplamAdet});

        javax.swing.GroupLayout dialogDukkanaUrunEkleLayout = new javax.swing.GroupLayout(dialogDukkanaUrunEkle.getContentPane());
        dialogDukkanaUrunEkle.getContentPane().setLayout(dialogDukkanaUrunEkleLayout);
        dialogDukkanaUrunEkleLayout.setHorizontalGroup(
            dialogDukkanaUrunEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogDukkanaUrunEkleLayout.setVerticalGroup(
            dialogDukkanaUrunEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogMaliyetHesaplama.addWindowListener(new WindowsFermuarListener(fileModelBilgi, modelModelBilgi));

        buttonModelEkle.setText("Model Ekle");
        buttonModelEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModelEkleActionPerformed(evt);
            }
        });

        tableModelBilgileri.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tableModelBilgileri.setModel(new javax.swing.table.DefaultTableModel());
        tableModelBilgileri.setSelectionForeground(new java.awt.Color(153, 255, 153));
        tableModelBilgileri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableModelBilgileriMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableModelBilgileri);

        buttonModelBilgileriDüzenle.setText("Düzenle");
        buttonModelBilgileriDüzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModelBilgileriDüzenleActionPerformed(evt);
            }
        });

        buttonModelSil.setText("Sil");
        buttonModelSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModelSilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelModelEklemeLayout = new javax.swing.GroupLayout(panelModelEkleme);
        panelModelEkleme.setLayout(panelModelEklemeLayout);
        panelModelEklemeLayout.setHorizontalGroup(
            panelModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelModelEklemeLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelModelEklemeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonModelEkle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonModelBilgileriDüzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(buttonModelSil, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        panelModelEklemeLayout.setVerticalGroup(
            panelModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelModelEklemeLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(panelModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonModelBilgileriDüzenle)
                    .addComponent(buttonModelEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonModelSil))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout dialogMaliyetHesaplamaLayout = new javax.swing.GroupLayout(dialogMaliyetHesaplama.getContentPane());
        dialogMaliyetHesaplama.getContentPane().setLayout(dialogMaliyetHesaplamaLayout);
        dialogMaliyetHesaplamaLayout.setHorizontalGroup(
            dialogMaliyetHesaplamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelModelEkleme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogMaliyetHesaplamaLayout.setVerticalGroup(
            dialogMaliyetHesaplamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogMaliyetHesaplamaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelModelEkleme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 0));
        jLabel8.setText("Model ismini giriniz :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Kullanılan kumaşın birim fiyatını giriniz :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Model için giden kumaş metresini giriniz :(küsüratlar için \".\" kullanınız. Örn: 1.35) :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Kullanılan astarın birim fiyatını giriniz :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Modelin içerisine kullanılan astar metresini giriniz :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Eğer varsa Poların birim metre fiyatını giriniz :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Eğer varsa kullanılan Polar metresini giriniz :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Toplam fermuar maliyetini giriniz :");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Eğer varsa bir üründe giden ribana vb.. maliyetini giriniz :");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Aksesuar maliyetini giriniz :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Fason maliyetini giriniz :");

        textFieldKumasBirimFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldKumasBirimFiyatActionPerformed(evt);
            }
        });

        textFieldAstarBirimFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAstarBirimFiyatActionPerformed(evt);
            }
        });

        textFieldAstarMetreFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAstarMetreFiyatActionPerformed(evt);
            }
        });

        textFieldKumasMetreFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldKumasMetreFiyatActionPerformed(evt);
            }
        });

        textFieldPolarBirimFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPolarBirimFiyatActionPerformed(evt);
            }
        });

        textFieldModelIsmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldModelIsmiActionPerformed(evt);
            }
        });

        textFieldPolarMetreFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPolarMetreFiyatActionPerformed(evt);
            }
        });

        textFieldRibanaVbMaliyet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldRibanaVbMaliyetActionPerformed(evt);
            }
        });

        textFieldFermuarFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFermuarFiyatActionPerformed(evt);
            }
        });

        textFieldAksesuarFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAksesuarFiyatActionPerformed(evt);
            }
        });

        textFieldFasonFiyat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFasonFiyatActionPerformed(evt);
            }
        });

        buttonModelMaliyetEkle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonModelMaliyetEkle.setForeground(new java.awt.Color(0, 0, 255));
        buttonModelMaliyetEkle.setText("Hesapla");
        buttonModelMaliyetEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModelMaliyetEkleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogModelEklemeLayout = new javax.swing.GroupLayout(dialogModelEkleme.getContentPane());
        dialogModelEkleme.getContentPane().setLayout(dialogModelEklemeLayout);
        dialogModelEklemeLayout.setHorizontalGroup(
            dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel17))
                .addGap(4, 4, 4)
                .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldAstarMetreFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldPolarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldPolarMetreFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldRibanaVbMaliyet, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldAstarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldAksesuarFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldFermuarFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldFasonFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFasonMaliyet, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAksesuarMaliyet, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelFermuarToplamFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelGidenAstarFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPolarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelGidenPolarFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRibanaVbFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAstarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldKumasMetreFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textFieldModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textFieldKumasBirimFiyat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelGidenKumas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelKumasBirimFiyatUyarı, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(46, Short.MAX_VALUE))
            .addComponent(buttonModelMaliyetEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel12, jLabel13, jLabel14, jLabel15, jLabel16});

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textFieldAksesuarFiyat, textFieldAstarBirimFiyat, textFieldAstarMetreFiyat, textFieldFasonFiyat, textFieldFermuarFiyat, textFieldKumasBirimFiyat, textFieldKumasMetreFiyat, textFieldModelIsmi, textFieldPolarBirimFiyat, textFieldPolarMetreFiyat, textFieldRibanaVbMaliyet});

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelAksesuarMaliyet, labelAstarBirimFiyat, labelFasonMaliyet, labelFermuarToplamFiyat, labelGidenAstarFiyat, labelGidenKumas, labelGidenPolarFiyat, labelKumasBirimFiyatUyarı, labelModelIsmi, labelPolarBirimFiyat, labelRibanaVbFiyat});

        dialogModelEklemeLayout.setVerticalGroup(
            dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(textFieldModelIsmi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldKumasBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldKumasMetreFiyat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(labelModelIsmi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelKumasBirimFiyatUyarı, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                            .addComponent(labelGidenKumas, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)))
                .addGap(7, 7, 7)
                .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(textFieldAstarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(textFieldAstarMetreFiyat))
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(labelAstarBirimFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelGidenAstarFiyat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(5, 5, 5)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPolarBirimFiyat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldPolarBirimFiyat, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelGidenPolarFiyat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldPolarMetreFiyat))
                        .addGap(5, 5, 5)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRibanaVbFiyat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldRibanaVbMaliyet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(labelFermuarToplamFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelAksesuarMaliyet, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dialogModelEklemeLayout.createSequentialGroup()
                                .addComponent(textFieldFermuarFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(textFieldAksesuarFiyat)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogModelEklemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldFasonFiyat)
                            .addComponent(labelFasonMaliyet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(2, 2, 2)
                .addComponent(buttonModelMaliyetEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel8, textFieldAksesuarFiyat, textFieldAstarBirimFiyat, textFieldAstarMetreFiyat, textFieldFasonFiyat, textFieldKumasBirimFiyat, textFieldKumasMetreFiyat, textFieldModelIsmi, textFieldPolarBirimFiyat, textFieldPolarMetreFiyat, textFieldRibanaVbMaliyet});

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelAksesuarMaliyet, labelAstarBirimFiyat, labelFasonMaliyet, labelFermuarToplamFiyat, labelGidenAstarFiyat, labelGidenKumas, labelGidenPolarFiyat, labelKumasBirimFiyatUyarı, labelModelIsmi, labelPolarBirimFiyat, labelRibanaVbFiyat});

        dialogModelEklemeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel9});

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonKumasTopuEkle.setVerifyInputWhenFocusTarget(false);
        buttonKumasTopuEkle.setIcon(new ImageIcon("blue-ball.gif"));
        buttonKumasTopuEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKumasTopuEkleActionPerformed(evt);
            }
        });

        buttonAksesuarDurumu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAksesuarDurumuActionPerformed(evt);
            }
        });

        buttonDukkandakiUrunler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDukkandakiUrunlerActionPerformed(evt);
            }
        });

        buttonMaliyetHesaplama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMaliyetHesaplamaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("  Kumaş Topu Durumu");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Aksesuar Durumu");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Dükkandaki Ürünler");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Maliyet Hesaplama");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonMaliyetHesaplama, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(buttonKumasTopuEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAksesuarDurumu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(buttonDukkandakiUrunler, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addGap(73, 73, 73))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonAksesuarDurumu, buttonDukkandakiUrunler, buttonKumasTopuEkle, buttonMaliyetHesaplama});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonAksesuarDurumu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonKumasTopuEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonMaliyetHesaplama, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(buttonDukkandakiUrunler, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonAksesuarDurumu, buttonDukkandakiUrunler, buttonMaliyetHesaplama});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldKumasTuruAdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldKumasTuruAdiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldKumasTuruAdiActionPerformed
    
    private ImageIcon buttonIconAyarlama(String name,JButton button)
    {
        ImageIcon icon = new ImageIcon(name);
        System.out.println(button.getWidth());
        if(icon.getIconWidth()>button.getWidth())
        {
             icon = new ImageIcon(icon.getImage().getScaledInstance(
                     button.getWidth(), -1, Image.SCALE_DEFAULT));

            
        }
        return icon;
    }
    private void tablodanBirSutunSil()
    {
           
         try{
      //  file = new File("C:\\Users\\H3RK3S\\Desktop\\TextileProject\\fermuaradet.txt");
        if(!fileModelDuzenleBilgileri.exists())
        {
            
            fileModelDuzenleBilgileri.createNewFile();
        }
            boolean sonDeger =true;
            
            Object [][] butunRowBilgiler = modelBilgileriArray();
            
            FileWriter fw = new FileWriter(fileModelDuzenleBilgileri.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            System.out.println("tablodanBirSutunSil fonkdaki dosyadan okunan bilgiler ="+ Arrays.deepToString(butunRowBilgiler));
            if(modelModelBilgi.getRowCount() !=0)
            {
            for (int i = 0; i < modelModelBilgi.getRowCount(); i++) {
                
            if(i == tableModelBilgileri.getSelectedRow())
            {
                System.out.println("i nin şimdiki değeri = "+ i);
                System.out.println("Seçilen sütun i ye eşittir ="+ tableModelBilgileri.getSelectedRow());
                System.out.println("Tablo silinmeden önceki modelbilgileri 'array butunRowBilgiler'="+ Arrays.deepToString(butunRowBilgiler));
                if(i == modelModelBilgi.getRowCount()-1)
                {
                    sonDeger =false;
                }
                i++;
            }
                if(sonDeger){
                for (int j = 0; j <butunRowBilgiler[i].length; j++) {
                    
                    bw.write(butunRowBilgiler[i][j].toString()+" ");
                             
                }
                }
            
                bw.newLine();
                System.out.println("Tablo silindikten sonra 'array butunRowBilgiler'="+ Arrays.deepToString(butunRowBilgiler));
            }
            bw.close();
            fw.close();         
            }}
            catch(IOException ex)
        {
            ex.getMessage();
        }
         catch(NullPointerException e)
         {
             
         }
         
      
            System.out.println("tablemodelin row sayısı =" + modelModelBilgi.getRowCount());
           System.out.println("table ın row sayısı = "+tableModelBilgileri.getRowCount());
        modelModelBilgi.removeRow(tableModelBilgileri.getSelectedRow());
        tableModelBilgileri.setModel(modelModelBilgi);
    }
    public Object [][] aksesuarDialogundakiBilgiler(File file,DefaultTableModel model)
    {
        Object [][] aksesuarDiziBilgileri = new Object[model.getRowCount()][model.getColumnCount()];
        if(!file.exists())
        {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
                        
        }
        try {
 
            
            FileReader reader = new FileReader(file);
            BufferedReader br = new BufferedReader(reader);
            
            Object[] lines = br.lines().toArray();
            
            for (int i = 0; i <lines.length; i++)
            {
             String[] row = lines[i].toString().split(" ");
                System.out.println(Arrays.toString(row));
             aksesuarDiziBilgileri[i] = row;
             try {
                    br.close();
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }
      System.out.println("aksesuarDiziBilgileri =" + Arrays.toString(aksesuarDiziBilgileri));
        return aksesuarDiziBilgileri;
    }
    
    private Object [][] modelBilgileriDuzenleArray(String[] duzenlenenRow)
    {
        if(!fileModelDuzenleBilgileri.exists())
        {
            try {
                fileModelDuzenleBilgileri.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
        }
        Object[][] row = new String[tableModelBilgileri.getRowCount()][11];
        try {
 
            
            FileReader reader = new FileReader(fileModelDuzenleBilgileri);
            BufferedReader br = new BufferedReader(reader);
            try {
                if(!br.ready())
                {
                    return null;
                }
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
            Object[] lines = br.lines().toArray();
            //Eğer dosyanın içi boşsa null değerini döndür
            
            System.out.println("modelDuzenleme... görülen row sayısı = "+tableModelBilgileri.getRowCount());
            System.out.println("parametre olarak alınan duzenlenenRow = "+Arrays.toString( duzenlenenRow));
             
            for (int i = 0; i <row.length; i++)
            {
                if(i == tableModelBilgileri.getSelectedRow())
                {
                    for (int j = 0; j<row[i].length; j++) {
                                       
                        row[i][j] = duzenlenenRow[j];
                                }
                                                           
                    if(i == tableModelBilgileri.getRowCount()-1)
                    {
                     return row;
                    }
                    i++;
                }
             row[i] = lines[i].toString().split("tF3sjrG2dB");
                
                System.out.println("düzenleme row[i] = "+Arrays.toString( row[i]));
                System.out.println("düzenleme row ="+Arrays.deepToString(row));
                try {
                    br.close();
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return row;
    }
    private Object[][] modelBilgileriArray ()
    {
        if(!fileModelDuzenleBilgileri.exists())
        {
            try {
                fileModelDuzenleBilgileri.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
        }
        Object[][] row = new String[tableModelBilgileri.getRowCount()][11];
        try {
 
            
            FileReader reader = new FileReader(fileModelDuzenleBilgileri);
            BufferedReader br = new BufferedReader(reader);
            try {
                if(!br.ready())
                {
                    System.out.println("BufferredReader dosyadaki verileri okumadı ve değer null döndü");
                    return null;
                }
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
            Object[] lines = br.lines().toArray();
            //Eğer dosyanın içi boşsa null değerini döndür
            
            System.out.println("Dosyadan okunan 'lines' array değeri ="+ Arrays.deepToString(lines));
            System.out.println("'lines' arrayinin uzunluğu ="+ lines.length);
            System.out.println("modelDuzenleme... görülen row sayısı = "+tableModelBilgileri.getRowCount());
             
            if(butunBilgileriEldeEt)
            {
            for (int i = 0; i <row.length; i++)
            {
                //Burada lines[i] nin değer row.length den küçük olduğu için
                // program hata veriyor bu yüzden bigileri okurken arrayin
                //içindeki bütün değerleri buradaki if döngüsünde okunur.
                
             row[i] = lines[i].toString().split(" ");
                
                System.out.println(Arrays.toString(row[i]));
                System.out.println(Arrays.deepToString(row));
                        
            }
            }
            //Buradaki if komutunda yeni bilgi eklemek için en son length uzun-
            //luğunu -1 yaparak kaydedilen bilgileri row arrayine aktarılır.
            //böylece en son eklenecek bilginin arrayini burada boş bırakmış oluyoruz.
             if(!butunBilgileriEldeEt){
                for (int i = 0; i <row.length-1; i++)
            {
                
             row[i] = lines[i].toString().split(" ");
                
                System.out.println(Arrays.toString(row[i]));
                System.out.println(Arrays.deepToString(row));
                        try {
                    br.close();
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        return row;
    }
    private void modelDüzenlemeBilgileriniDosyayaKaydet(Object[][] sBilgi)
    {
        
      
         try{
      //  file = new File("C:\\Users\\H3RK3S\\Desktop\\TextileProject\\fermuaradet.txt");
        if(!fileModelDuzenleBilgileri.exists())
        {
            
            fileModelDuzenleBilgileri.createNewFile();
        }
    
            FileWriter fw = new FileWriter(fileModelDuzenleBilgileri.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            if(sBilgi.length !=0)
            { 
                Object[][] yedekArray =sBilgi;
            for (int i=0; i< yedekArray.length;i++) {
                for(int j =0;j<yedekArray[i].length;j++)
                {
                bw.write(yedekArray[i][j].toString() + " ");
                }
                bw.newLine();
            }
                 
            }
            bw.close();
            fw.close();
            
        }catch(IOException e)
         {
             
         }
    }
         private void modelDuzenlemeBilgileriniGoster(int secilenSutun)
         {
             int simdikiSutun = secilenSutun;
          if(!fileModelDuzenleBilgileri.exists())
        {
            try {
                fileModelDuzenleBilgileri.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
        }
        try {
 
            
            FileReader reader = new FileReader(fileModelDuzenleBilgileri);
            BufferedReader br = new BufferedReader(reader);
            
            Object[] lines = br.lines().toArray();
            Object[][] row = new String[tableModelBilgileri.getRowCount()][11];
            System.out.println("modelDuzenleme... görülen row sayısı = "+tableModelBilgileri.getRowCount());
            System.out.println(row.length);
             
            for (int i = 0; i <row.length; i++)
            {
             row[i] = lines[i].toString().split(" ");
                
                System.out.println(Arrays.toString(row[i]));
                System.out.println("Modelduzenleme... fonksiyonundaki okunan row bilgileri ="+Arrays.deepToString(row));
                        
            }
            
            textFieldModelIsmi.setText(row[secilenSutun][0].toString());
        textFieldKumasBirimFiyat.setText(row[secilenSutun][1].toString());
        textFieldKumasMetreFiyat.setText(row[secilenSutun][2].toString());
        textFieldAstarBirimFiyat.setText(row[secilenSutun][3].toString());
        textFieldAstarMetreFiyat.setText(row[secilenSutun][4].toString());
        textFieldPolarBirimFiyat.setText(row[secilenSutun][5].toString());
        textFieldPolarMetreFiyat.setText(row[secilenSutun][6].toString());
        textFieldRibanaVbMaliyet.setText(row[secilenSutun][7].toString());
        textFieldFermuarFiyat.setText(row[secilenSutun][8].toString());
        textFieldAksesuarFiyat.setText(row[secilenSutun][9].toString());
        textFieldFasonFiyat.setText(row[secilenSutun][10].toString());
            
        try {
                    br.close();
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
                }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }    
         }
   
    private boolean StringContainsANumber(String s)
    {
        try {
            float f = Float.valueOf(s);
        } catch (NumberFormatException  | NullPointerException e) {
            return false;
        }
        
        return true;
    }
    private boolean BosKabulEdilenDegerler(String s)
    {
        try {
            float f = Float.parseFloat(s);
        } 
        catch(NullPointerException n)
        {
            System.out.println("Çalıştı 0");
            return true;
        }
        catch (NumberFormatException  e) {
            
                String checkWord ="empty String";
            System.out.println("Çalıştı 1");
            System.out.println(e.getMessage());
            if(checkWord.equals(e.getMessage()))
            {
                System.out.println("Döngü döndü");
                return true;
            }else return false;
        }
        System.out.println("Çalıştı 2");
        return true;
    }
   
    private void textFieldKumasRengiAdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldKumasRengiAdiActionPerformed

    }//GEN-LAST:event_textFieldKumasRengiAdiActionPerformed

    private void buttonKumasTopuEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKumasTopuEkleActionPerformed

        if(!file.exists())
        {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        for (int i = 0; i < model.getRowCount(); i++) {
            for(int j =0 ; j < model.getColumnCount();j++)
            {
                if(model.getValueAt(i, j).toString() == null) model.removeRow(i);
            }
            
        }
              
    }//GEN-LAST:event_buttonKumasTopuEkleActionPerformed
        KumasAdetDialog.pack();
        KumasAdetDialog.setVisible(true);
        KumasAdetDialog.pack();
    }
    private void buttonKumasEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKumasEkleActionPerformed
        KumasEkleDialog.pack();
        KumasEkleDialog.setVisible(true);
        KumasEkleDialog.pack();
    }//GEN-LAST:event_buttonKumasEkleActionPerformed

    private void tamamButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tamamButonActionPerformed
        KumasEkleDialog.setVisible(false);
              Object []rows = new Object[4];
              rows[0] = textFieldKumasTuruAdi.getText();
              rows[1] = textFieldKumasRengiAdi.getText();
              rows[2] = textFieldKumasSayisi.getText();
              rows[3] =LocalDate.now();
              if(!rows[0].equals("")&&!rows[1].equals("")&&!rows[2].equals(""))
              {
              model.addRow(rows);
              table.setModel(model);
              textFieldKumasTuruAdi.setText("");
              textFieldKumasRengiAdi.setText("");
              textFieldKumasSayisi.setText("");
              }
              KumasAdetDialog.pack();
    }//GEN-LAST:event_tamamButonActionPerformed

    private void buttonTabloyuYükleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTabloyuYükleActionPerformed
        
      
        
            JFileChooser chooser = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("Text field","dat");
            chooser.setCurrentDirectory(new File("."));
            chooser.setFileFilter(filter);
            chooser.showOpenDialog(this);
            String path = chooser.getSelectedFile().getPath();
            file = new File(path);
                        
        
        try {
            
            FileReader reader = new FileReader(file);
            BufferedReader br = new BufferedReader(reader);
            
           //model = (DefaultTableModel) table.getModel();
            Object[] lines = br.lines().toArray();
            
            for (int i = 0; i <lines.length; i++)
            {
             String[] row = lines[i].toString().split("tF3sjrG2dB");
             model.addRow(row);
             
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonTabloyuYükleActionPerformed

    private float maaliyetHesaplama(float kumasBirim,float gidenKumas,float astarBirim,float gidenAstar,
         float polarBirim, float gidenPolar
    ,float ribanaMaliyet,float fermuarMaliyet,float AksesuarMaliyet ,float fasonFiyat)
    {
        if(polarBirim ==0  )polarBirim =0;
        if(gidenPolar ==0)gidenPolar =0;
        if(ribanaMaliyet ==0)ribanaMaliyet =0;
        
        System.out.println(polarBirim + "-" + gidenPolar +"-"+ ribanaMaliyet);
        float result = (kumasBirim*gidenKumas) + (astarBirim *gidenAstar) + (polarBirim * gidenPolar) + 
                ribanaMaliyet + fermuarMaliyet + AksesuarMaliyet + fasonFiyat;
        return result;
    }
    private void comboBoxAksesuarCesitleriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAksesuarCesitleriActionPerformed
       
        getName = comboBoxAksesuarCesitleri.getItemAt(comboBoxAksesuarCesitleri.getSelectedIndex());
        getIndex = comboBoxAksesuarCesitleri.getSelectedIndex();
        System.out.println(getName);
        switch(getIndex)
        {
                case 0:
                //Fermuarlar
               
                aksesuarDurumu.comboBoxAksesuarDurumu(getIndex, modelFermuar, tableAksesuarlar, columnsFermuar);
                break;
                case 1:
                //Etiketler
                
                aksesuarDurumu.comboBoxAksesuarDurumu(getIndex, modelEtiket, tableAksesuarlar, columnsEtiket);
                break;
                case 2:
                    //Kartlar
               
                aksesuarDurumu.comboBoxAksesuarDurumu(getIndex, modelKart, tableAksesuarlar, columnsEtiket);
                break;
                case 3:
                    //Armalar
                 
                aksesuarDurumu.comboBoxAksesuarDurumu(getIndex, modelArma, tableAksesuarlar, columnsEtiket);
                break;
                default:
        }
    }//GEN-LAST:event_comboBoxAksesuarCesitleriActionPerformed

    private void buttonAksesuarDurumuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAksesuarDurumuActionPerformed

        dialogAksesuarDurumu.pack();
        dialogAksesuarDurumu.setVisible(true);
        dialogAksesuarDurumu.pack();
    }//GEN-LAST:event_buttonAksesuarDurumuActionPerformed

    private void textFieldFermuarBoyuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFermuarBoyuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFermuarBoyuActionPerformed

    private void textFieldFermuarRengiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFermuarRengiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFermuarRengiActionPerformed

    private void buttonTamamFermuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTamamFermuarActionPerformed
       
        
         Object [] rows = new Object[4];
                  rows[0]= textFieldFermuarBoyu.getText();
                  rows[1]=textFieldFermuarRengi.getText();
                  rows[2]=textFieldFermuarAdet.getText();
                  rows[3]= LocalDate.now();
                  if(!rows[0].equals("") && !rows[1].equals("") && !rows[2].equals(""))
                  {
                  modelFermuar.addRow(rows);
                  }
                  textFieldFermuarBoyu.setText("");
                  textFieldFermuarRengi.setText("");
                  textFieldFermuarAdet.setText("");
                  dialogFermuarEkle.setVisible(false);
    }//GEN-LAST:event_buttonTamamFermuarActionPerformed

    private void buttonAksesuarEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAksesuarEkleActionPerformed
        
       
        System.out.println(getIndex);
        switch(getIndex)
        {
            case 0:
                //Fermuarlar
                aksesuarDurumu.aksesuarEkle(getIndex, getName, labelFermuarBoyu, labelFermuarRengi,labelFermuarAdet, dialogFermuarEkle);
                     
                break;
            case 1:
                //Etiketler
                aksesuarDurumu.aksesuarEkle(getIndex, getName, labelAksesuarTuru, labelAksesuarSayisi, null, dialogAksesuarEkle);
                break;
                case 2:
                    //Kartlar
                aksesuarDurumu.aksesuarEkle(getIndex, getName, labelAksesuarTuru, labelAksesuarSayisi, null, dialogAksesuarEkle);
                break;
                case 3:
                    //Armalar
                aksesuarDurumu.aksesuarEkle(getIndex, getName, labelAksesuarTuru, labelAksesuarSayisi, null, dialogAksesuarEkle);
                break;
                default:
        }
        
    }//GEN-LAST:event_buttonAksesuarEkleActionPerformed

    private void textFieldAksesuarSayisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAksesuarSayisiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAksesuarSayisiActionPerformed

    private void buttonAksesuarTamamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAksesuarTamamActionPerformed
       
        Object [] rows = new Object[3];
                  rows[0]= textFieldAksesuarTuru.getText();
                  rows[1]=textFieldAksesuarSayisi.getText();
                  rows[2] = LocalDate.now();
                
                  if(!rows[0].equals("") && !rows[1].equals(""))
                  {
                      if(getIndex == 1) modelEtiket.addRow(rows);
                      if(getIndex ==2)modelKart.addRow(rows);
                      if(getIndex ==3 )modelArma.addRow(rows);
                  }
                  textFieldAksesuarTuru.setText("");
                  textFieldAksesuarSayisi.setText("");
                  
                  dialogAksesuarEkle.setVisible(false);
        
    }//GEN-LAST:event_buttonAksesuarTamamActionPerformed

    private void buttonAksesuarTabloYukleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAksesuarTabloYukleActionPerformed

        switch(getIndex)
        {
                case 0:
                //Fermuarlar
               
                aksesuarDurumu.aksesuarSil(modelFermuar, tableAksesuarlar);
                break;
                case 1:
                //Etiketler
                
               aksesuarDurumu.aksesuarSil(modelEtiket, tableAksesuarlar);
                break;
                case 2:
                    //Kartlar
               
                aksesuarDurumu.aksesuarSil(modelKart, tableAksesuarlar);
                break;
                case 3:
                    //Armalar
                 
                aksesuarDurumu.aksesuarSil(modelArma, tableAksesuarlar);
                break;
                default:
        }
       
    }//GEN-LAST:event_buttonAksesuarTabloYukleActionPerformed

    private void buttonDukkandakiUrunlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDukkandakiUrunlerActionPerformed

        Object[][] dukkandakiUrunBilgileri = dukkandakiUrunler.getDukkandakiUrunBilgileri();
        if(dukkandakiUrunBilgileri.length !=0){
            if(dukkandakiUrunler.getModelDukkandakiUrunlerYuklemeDurumu())
            {
        for (int i = 0; i < dukkandakiUrunBilgileri.length; i++) {
            modelDukkandakiUrunler.addRow(dukkandakiUrunBilgileri[i]);
        }}
        
        }
        tableDukkandakiUrunler.setModel(modelDukkandakiUrunler);
        dukkandakiUrunler.setModelDukkandakiUrunlerYuklemeDurumu(false);
        dialogDukkandakiUrunler.pack();
        dialogDukkandakiUrunler.setVisible(true);
        dialogDukkandakiUrunler.pack();
    }//GEN-LAST:event_buttonDukkandakiUrunlerActionPerformed
    
    private void buttonModelEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModelEkleActionPerformed
        
        modelTableEkleEnable = true;
        modelTableDüzenleEnable = false;
        SilButonuAktiflikDurumu = false;
        butunBilgileriEldeEt = false;
        
        textFieldModelIsmi.setText("");
        textFieldKumasBirimFiyat.setText("");
        textFieldKumasMetreFiyat.setText("");
        textFieldAstarBirimFiyat.setText("");
        textFieldAstarMetreFiyat.setText("");
        textFieldPolarBirimFiyat.setText("");
        textFieldPolarMetreFiyat.setText("");
        textFieldRibanaVbMaliyet.setText("");
        textFieldFermuarFiyat.setText("");
        textFieldAksesuarFiyat.setText("");
        textFieldFasonFiyat.setText("");
        dialogModelEkleme.pack();
        dialogModelEkleme.setVisible(true);
        dialogModelEkleme.pack();
        
    }//GEN-LAST:event_buttonModelEkleActionPerformed

    private void buttonMaliyetHesaplamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMaliyetHesaplamaActionPerformed

         modelModelBilgi.setColumnIdentifiers(columnsModel);
         tableModelBilgileri.setModel(modelModelBilgi);
         
        if(modelTableYuklemeDurumu)
        {
        if(!fileModelBilgi.exists())
        {
            try {
                fileModelBilgi.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
            }
                  }
        try {
 
            
            FileReader reader = new FileReader(fileModelBilgi);
            BufferedReader br = new BufferedReader(reader);
            
            Object[] lines = br.lines().toArray();
            
            for (int i = 0; i <lines.length; i++)
            {
             String[] row = lines[i].toString().split("tF3sjrG2dB");
                System.out.println(Arrays.toString(row));
             modelModelBilgi.addRow(row);
             
            }
            br.close();
            reader.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
        }    catch (IOException ex) {
                 Logger.getLogger(TextileProject.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
        dialogMaliyetHesaplama.pack();
        dialogMaliyetHesaplama.setVisible(true);
        dialogMaliyetHesaplama.pack();
        modelTableYuklemeDurumu =false;
    }//GEN-LAST:event_buttonMaliyetHesaplamaActionPerformed

    private void buttonModelMaliyetEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModelMaliyetEkleActionPerformed

        float kumasBirimFiyat = 0;
        float gidenKumasMetresi =0;
        float astarBirimFiyat =0;
        float gidenAstarMetresi =0;
        float fermuarToplamFiyat =0;
        float aksesuarToplamFiyat =0;
        float fasonParası =0;
        float polarBirimFiyatı =0;
        float gidenPolarFiyatı =0;
        float ribanaToplamFiyat =0;
        float result =0;
        boolean ModelEkleDialogEnable =false;

        //Kullanıcının girdiği verileri okur ve bir String e aktarır.
        String modelAdi = textFieldModelIsmi.getText();
        String skumasBirimFiyat = textFieldKumasBirimFiyat.getText();
        String sGidenKumasMetresi = textFieldKumasMetreFiyat.getText();
        String sAstarBirimFiyat = textFieldAstarBirimFiyat.getText();
        String sGidenAstarMetresi = textFieldAstarMetreFiyat.getText();
        String sPolarBirimFiyat = textFieldPolarBirimFiyat.getText();
        String sGidenPolarMetresi = textFieldPolarMetreFiyat.getText();
        String sRibanaToplamFiyat = textFieldRibanaVbMaliyet.getText();
        String sFermuartoplamFiyat = textFieldFermuarFiyat.getText();
        String sAksesuarToplamFiyat = textFieldAksesuarFiyat.getText();
        String sFasonParası = textFieldFasonFiyat.getText();

        //Uyarıları render lamak için kullanılır.
        labelKumasBirimFiyatUyarı.setText("");
        labelGidenKumas.setText("");
        labelAstarBirimFiyat.setText("");
        labelGidenAstarFiyat.setText("");
        labelPolarBirimFiyat.setText("");
        labelGidenPolarFiyat.setText("");
        labelRibanaVbFiyat.setText("");
        labelFermuarToplamFiyat.setText("");
        labelAksesuarMaliyet.setText("");
        labelFasonMaliyet.setText("");

        //Eğer herhangi bir bölümlerde sayı yerine harf girmişse kullanıcıyı uyar
        if(!StringContainsANumber(skumasBirimFiyat))
        {
            labelKumasBirimFiyatUyarı.setForeground(Color.red);
            labelKumasBirimFiyatUyarı.setText("Lütfen sayi giriniz.");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sGidenKumasMetresi))
        {
            labelGidenKumas.setForeground(Color.red);
            labelGidenKumas.setText("Lütfen sayi giriniz.");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sAstarBirimFiyat))
        {
            labelAstarBirimFiyat.setForeground(Color.red);
            labelAstarBirimFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sGidenAstarMetresi))
        {
            labelGidenAstarFiyat.setForeground(Color.red);
            labelGidenAstarFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!BosKabulEdilenDegerler(sPolarBirimFiyat))
        {
            System.out.println(!BosKabulEdilenDegerler(sPolarBirimFiyat));
            labelPolarBirimFiyat.setForeground(Color.red);
            labelPolarBirimFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!BosKabulEdilenDegerler(sGidenPolarMetresi))
        {
            System.out.println(!BosKabulEdilenDegerler(sGidenPolarMetresi));
            labelGidenPolarFiyat.setForeground(Color.red);
            labelGidenPolarFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!BosKabulEdilenDegerler(sRibanaToplamFiyat))
        {
            labelRibanaVbFiyat.setForeground(Color.red);
            labelRibanaVbFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sFermuartoplamFiyat))
        {
            labelFermuarToplamFiyat.setForeground(Color.red);
            labelFermuarToplamFiyat.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sAksesuarToplamFiyat))
        {
            labelAksesuarMaliyet.setForeground(Color.red);
            labelAksesuarMaliyet.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        if(!StringContainsANumber(sFasonParası))
        {
            labelFasonMaliyet.setForeground(Color.red);
            labelFasonMaliyet.setText("Lütfen sayi giriniz");
            ModelEkleDialogEnable =true;
        }
        
        //Eğer gerekli bilgiler doldurulmazsa kullanıcıyı uyar
        if(modelAdi.isEmpty() || modelAdi.equals(""))
        {
            labelModelIsmi.setForeground(Color.red);
            labelModelIsmi.setText("Boş bırakılamaz!.");
        }
        if( skumasBirimFiyat.isEmpty() || skumasBirimFiyat.equals(""))
        {
            labelKumasBirimFiyatUyarı.setForeground(Color.red);
            labelKumasBirimFiyatUyarı.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        if(sGidenKumasMetresi.isEmpty() || sGidenKumasMetresi.equals(""))
        {
            labelGidenKumas.setForeground(Color.red);
            labelGidenKumas.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        if(sAstarBirimFiyat.isEmpty() || sAstarBirimFiyat.equals(""))
        {
            labelAstarBirimFiyat.setForeground(Color.red);
            labelAstarBirimFiyat.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        if(sGidenAstarMetresi.isEmpty() || sGidenAstarMetresi.equals(""))
        {
            labelGidenAstarFiyat.setForeground(Color.red);
            labelGidenAstarFiyat.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
       /* if(sPolarBirimFiyat.isEmpty() || sPolarBirimFiyat.equals(""))
        {
            ModelEkleDialogEnable=false;
        }
        if(sGidenPolarMetresi.isEmpty() || sGidenPolarMetresi.equals(""))
        {
            ModelEkleDialogEnable =false;
        }
        if(sRibanaToplamFiyat.isEmpty() || sRibanaToplamFiyat.equals(""))
        {
            ModelEkleDialogEnable = false;
        }*/
        if(sFermuartoplamFiyat.isEmpty() || sFermuartoplamFiyat.equals(""))
        {
            labelFermuarToplamFiyat.setForeground(Color.red);
            labelFermuarToplamFiyat.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        if(sAksesuarToplamFiyat.isEmpty() || sAksesuarToplamFiyat.equals(""))
        {
            labelAksesuarMaliyet.setForeground(Color.red);
            labelAksesuarMaliyet.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        if(sFasonParası.isEmpty() || sFasonParası.equals(""))
        {
            labelFasonMaliyet.setForeground(Color.red);
            labelFasonMaliyet.setText("Boş bırakılamaz!.");
            ModelEkleDialogEnable =true;
        }
        
        //Hesaplanacak verilerin boş ve numara formatında
        //olup olmadığını kontrol et
        if(StringContainsANumber(skumasBirimFiyat) && StringContainsANumber(sGidenKumasMetresi) && StringContainsANumber(sAstarBirimFiyat)
                && StringContainsANumber(sGidenAstarMetresi) && BosKabulEdilenDegerler(sPolarBirimFiyat)&&
                BosKabulEdilenDegerler(sGidenPolarMetresi) && BosKabulEdilenDegerler(sRibanaToplamFiyat)&&StringContainsANumber(sFermuartoplamFiyat)
                && StringContainsANumber(sAksesuarToplamFiyat)&& StringContainsANumber(sFasonParası))
        {
             // Eğer polar ve ribana değerleri kullanıcı tarafından boş bırakılmışsa değerleri 0 yap
            if(sPolarBirimFiyat.isEmpty()||sPolarBirimFiyat.equals(""))
            {polarBirimFiyatı =0;}else polarBirimFiyatı= Float.parseFloat(sPolarBirimFiyat);
                       
            if(sGidenPolarMetresi.isEmpty()||sGidenPolarMetresi.equals(""))
            {gidenPolarFiyatı =0;}else gidenPolarFiyatı = Float.parseFloat(sGidenPolarMetresi);
            
            if(sRibanaToplamFiyat.isEmpty()|| sRibanaToplamFiyat.equals(""))
            {ribanaToplamFiyat =0;}else ribanaToplamFiyat = Float.parseFloat(sRibanaToplamFiyat);
            
            kumasBirimFiyat = Float.valueOf(skumasBirimFiyat);
            gidenKumasMetresi = Float.valueOf(sGidenKumasMetresi);
            astarBirimFiyat = Float.valueOf(sAstarBirimFiyat);
            gidenAstarMetresi =Float.valueOf(sGidenAstarMetresi);
           
            
            
            fermuarToplamFiyat = Float.valueOf(sFermuartoplamFiyat);
            aksesuarToplamFiyat = Float.valueOf(sAksesuarToplamFiyat);
            fasonParası = Float.valueOf(sFasonParası);
            
           
            
         
            System.out.println( maaliyetHesaplama(kumasBirimFiyat, gidenKumasMetresi, astarBirimFiyat, gidenAstarMetresi, polarBirimFiyatı, gidenPolarFiyatı, ribanaToplamFiyat, fermuarToplamFiyat, aksesuarToplamFiyat, fasonParası));
        result = maaliyetHesaplama(kumasBirimFiyat, gidenKumasMetresi, astarBirimFiyat, gidenAstarMetresi, polarBirimFiyatı, gidenPolarFiyatı, ribanaToplamFiyat, fermuarToplamFiyat, aksesuarToplamFiyat, fasonParası);
            System.out.println(modelTableEkleEnable);
        if(modelTableEkleEnable)
        {
        Object rows[] = new Object[3];
        rows[0] = textFieldModelIsmi.getText();
        rows[1] = result;
        rows[2] = LocalDate.now();
            for (Object row : rows) {
                System.out.println("textileproject.TextileProject.buttonModelMaliyetEkleActionPerformed()" + row.toString());
            }
        if(!rows[0].equals("")&& !rows[1].equals("") && !rows[2].equals(""))
        {
            System.out.println("textileproject.TextileProject.buttonModelMaliyetEkleActionPerformed() maliyet ekleme");
            modelModelBilgi.addRow(rows);
            tableModelBilgileri.setModel(modelModelBilgi);
        }
        
        
        Object[][] simdikiBilgiler;
        Object[][] gecmisBilgiler = modelBilgileriArray();
        simdikiBilgiler =new Object[modelModelBilgi.getRowCount()][11];
       Object[] satirBilgileri = {modelAdi,skumasBirimFiyat,sGidenKumasMetresi,sAstarBirimFiyat,sGidenAstarMetresi,Float.toString(polarBirimFiyatı),
           Float.toString(gidenPolarFiyatı),Float.toString(ribanaToplamFiyat),sFermuartoplamFiyat,sAksesuarToplamFiyat,sFasonParası};
       
       if(gecmisBilgiler != null )
       {
           for (int i = 0; i < gecmisBilgiler.length; i++) {
               for (int j = 0; j<gecmisBilgiler[i].length; j++) {
                   simdikiBilgiler[i][j] = gecmisBilgiler[i][j];
               }
             
           }
       }
            for (int i = modelModelBilgi.getRowCount()-1; i <simdikiBilgiler.length; i++) 
            {
               
                for (int j = 0; j < simdikiBilgiler[i].length; j++) {
                    simdikiBilgiler[i][j] = satirBilgileri[j];
                    
                }
            }
            System.out.println("sAdd Array = " + Arrays.deepToString(simdikiBilgiler));
             modelDüzenlemeBilgileriniDosyayaKaydet(simdikiBilgiler);
            // deneme = simdikiBilgiler;
             System.out.println("deneme Array = " + Arrays.deepToString(gecmisBilgiler));
        
        }
   // modelAdi,skumasBirimFiyat,sGidenKumasMetresi,sGidenKumasMetresi,sAstarBirimFiyat,sGidenAstarMetresi,Float.toString(polarBirimFiyatı),Float.toString(gidenPolarFiyatı),Float.toString(ribanaToplamFiyat),sFermuartoplamFiyat,sAksesuarToplamFiyat,sFasonParası
        if(modelTableDüzenleEnable)
        {
            Object rows[] = new Object[3];
        rows[0] = textFieldModelIsmi.getText();
        rows[1] = result;
        rows[2] = LocalDate.now();
        if(!rows[0].equals("")&& !rows[1].equals("") && !rows[2].equals(""))
        {
            modelModelBilgi.setValueAt(rows[0], tableModelBilgileri.getSelectedRow(),0 );
            modelModelBilgi.setValueAt(rows[1], tableModelBilgileri.getSelectedRow(),1 );
            modelModelBilgi.setValueAt(rows[2], tableModelBilgileri.getSelectedRow(),2 );
            tableModelBilgileri.setModel(modelModelBilgi);
        }
        
        
        Object[][] simdikiBilgiler;
        String[] satirBilgileri = {modelAdi,skumasBirimFiyat,sGidenKumasMetresi,sAstarBirimFiyat,sGidenAstarMetresi,Float.toString(polarBirimFiyatı),
          Float.toString(gidenPolarFiyatı),Float.toString(ribanaToplamFiyat),sFermuartoplamFiyat,sAksesuarToplamFiyat,sFasonParası};
       System.out.println("satirbilgileri Array = " + Arrays.deepToString(satirBilgileri));
        Object[][] gecmisBilgiler = modelBilgileriDuzenleArray(satirBilgileri);
        simdikiBilgiler =new Object[modelModelBilgi.getRowCount()][11];
          /*   
       if(gecmisBilgiler != null )
       {
           for (int i = 0; i < gecmisBilgiler.length; i++) {
               for (int j = 0; j<gecmisBilgiler[i].length; j++) {
                   simdikiBilgiler[i][j] = gecmisBilgiler[i][j];
               }
             
           }
       }
            for (int i = modelModelBilgi.getRowCount()-1; i <simdikiBilgiler.length; i++) 
            {
               
                for (int j = 0; j < simdikiBilgiler[i].length; j++) {
                    simdikiBilgiler[i][j] = satirBilgileri[j];
                    
                }
            }*/
            System.out.println("gecmisbilgiler Array = " + Arrays.deepToString(gecmisBilgiler));
             modelDüzenlemeBilgileriniDosyayaKaydet(gecmisBilgiler);
            // deneme = simdikiBilgiler;
             System.out.println("deneme Array = " + Arrays.deepToString(gecmisBilgiler));
        
        }}
        
       
        dialogModelEkleme.setVisible(ModelEkleDialogEnable);
        
    }//GEN-LAST:event_buttonModelMaliyetEkleActionPerformed

    private void textFieldFasonFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFasonFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFasonFiyatActionPerformed

    private void textFieldAksesuarFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAksesuarFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAksesuarFiyatActionPerformed

    private void textFieldFermuarFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFermuarFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFermuarFiyatActionPerformed

    private void textFieldRibanaVbMaliyetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldRibanaVbMaliyetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldRibanaVbMaliyetActionPerformed

    private void textFieldPolarMetreFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPolarMetreFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPolarMetreFiyatActionPerformed

    private void textFieldModelIsmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldModelIsmiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldModelIsmiActionPerformed

    private void textFieldPolarBirimFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPolarBirimFiyatActionPerformed
       
        
    }//GEN-LAST:event_textFieldPolarBirimFiyatActionPerformed

    private void textFieldKumasMetreFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldKumasMetreFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldKumasMetreFiyatActionPerformed

    private void textFieldAstarMetreFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAstarMetreFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAstarMetreFiyatActionPerformed

    private void textFieldAstarBirimFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAstarBirimFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAstarBirimFiyatActionPerformed

    private void textFieldKumasBirimFiyatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldKumasBirimFiyatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldKumasBirimFiyatActionPerformed

    private void buttonModelBilgileriDüzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModelBilgileriDüzenleActionPerformed
        // TODO add your handling code here:
        //Düzenlenecek
        butunBilgileriEldeEt = false;
        
       if( tableModelBilgileri.isRowSelected(tableModelBilgileri.getSelectedRow()))
       {
           modelDuzenlemeBilgileriniGoster(tableModelBilgileri.getSelectedRow());
           dialogModelEkleme.pack();
           dialogModelEkleme.setVisible(true);
           dialogModelEkleme.pack();
           System.out.println(tableModelBilgileri.getSelectedRow());
       }
       
        modelTableEkleEnable = false;
        modelTableDüzenleEnable = true;
        SilButonuAktiflikDurumu = false;
    }//GEN-LAST:event_buttonModelBilgileriDüzenleActionPerformed

    private void tableModelBilgileriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableModelBilgileriMouseClicked
        // TODO add your handling code here:
        boolean a = tableModelBilgileri.isEditing();
        if(a == false)JOptionPane.showMessageDialog(panelModelEkleme, "Bu tabloyu düzenleyemezsiniz!!");
    }//GEN-LAST:event_tableModelBilgileriMouseClicked

    private void buttonModelSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModelSilActionPerformed
        // TODO add your handling code here:
        butunBilgileriEldeEt = true;
        if(!dialogModelEkleme.isShowing())
        {
        tablodanBirSutunSil();
        }
    }//GEN-LAST:event_buttonModelSilActionPerformed

    private void buttonDukkandakiUruneModelEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDukkandakiUruneModelEkleActionPerformed
        // TODO add your handling code here:
        dialogDukkanaUrunEkle.pack();
        dialogDukkanaUrunEkle.setVisible(true);
        dialogDukkanaUrunEkle.pack();

    }//GEN-LAST:event_buttonDukkandakiUruneModelEkleActionPerformed

    private void buttonFotoDegistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFotoDegistirActionPerformed

        
     dukkandakiUrunler.dukkandakiUrunlerinFotosunuGuncelle(dialogDukkandakiUrunler, tableDukkandakiUrunler, labelUrunResim);
    }//GEN-LAST:event_buttonFotoDegistirActionPerformed
    
       
    
    private void buttonDukkanaUrunEkleTamamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDukkanaUrunEkleTamamActionPerformed
        // TODO add your handling code here:
       //Düzenlenecek...
       String pathIsEmpty = haveApathName;
       String modelIsmi = textfieldDukkanaUrunModelIsmi.getText();
       String kumasTuru =textfieldDukkanaUrunKumasTuru.getText();
       String bedenSayısı = textfieldDukkanaUrunBedenSayisi.getText();
       String toplamAdet = textfieldDukkanaUrunToplamAdet.getText();
       
          
           System.out.println("Main sınıfta okunan değerler =");
           System.out.println("modelismi ="+ textfieldDukkanaUrunModelIsmi.getText() + "kumaşTürü ="+ textfieldDukkanaUrunKumasTuru.getText()+ " bedenSayısı =" 
        + textfieldDukkanaUrunBedenSayisi.getText()+ "toplamAdet =" + textfieldDukkanaUrunToplamAdet.getText());
       /*
           * dukkandakiUrunler.UrunBilgileriEkle fonksiyonunda gerekli bilgiler
           * parametre yoluyla alınıt ve urunEkle Object dizisine atanır.
           */
          
            Object[] urunEkle = new Object[6];
            Object[] bilgileriAl = dukkandakiUrunler.UrunBilgileriEkle(modelIsmi, kumasTuru, bedenSayısı, toplamAdet,pathIsEmpty);
            for (int i = 0; i < bilgileriAl.length; i++) {
            urunEkle[i] = bilgileriAl[i];
        }
            Object tarihIleResmiYerDegistir = urunEkle[4];
            urunEkle[4] = LocalDate.now();
            urunEkle[5] = tarihIleResmiYerDegistir;
       System.out.println("Urunekle arrayi = "+ Arrays.deepToString(urunEkle));
      
       if(urunEkle.length !=0 && !pathIsEmpty.isEmpty())
       {
           /*
           
           */
       modelDukkandakiUrunler.addRow(urunEkle);
       dialogDukkanaUrunEkle.setVisible(false);
       textfieldDukkanaUrunBedenSayisi.setText("");
       textfieldDukkanaUrunKumasTuru.setText("");
       textfieldDukkanaUrunModelIsmi.setText("");
       textfieldDukkanaUrunToplamAdet.setText("");
       Object[][]gecmisBilgilerDizisi =dukkandakiUrunler.getDukkandakiUrunBilgileri();
       System.out.println("gecmisBilgilerDizisi arayinin değeri = "+ Arrays.deepToString(gecmisBilgilerDizisi));
       dukkandakiUrunler.kullanıcıVerileriniKaydet(gecmisBilgilerDizisi,urunEkle,modelDukkandakiUrunler.getRowCount(),modelDukkandakiUrunler.getColumnCount()+1);
       
       /*
       DukkanaUrunuEkle dialog'da tamam butonuna basıldıktan sonra 
       * fotoğtafın resim yolunu sıfırlanır ve bir dahaki seferde
       * yeni model ekleneceği zaman resim başlangıç değeri boş olara atanır.
       */
       haveApathName = null;
       
       }
       else if(modelIsmi.isEmpty())JOptionPane.showMessageDialog(dialogDukkanaUrunEkle, "Model İsmi kısmını boş bıraktınız");
       else if(kumasTuru.isEmpty())JOptionPane.showMessageDialog(dialogDukkanaUrunEkle, "Kumaş Türü kısmını boş bıraktınız");
       else if(!dukkandakiUrunler.checkInputIsANumber(bedenSayısı))JOptionPane.showMessageDialog(dialogDukkanaUrunEkle, "Beden sayısı kısmı boş veya hatalı giriş");
       else if(!dukkandakiUrunler.checkInputIsANumber(toplamAdet))JOptionPane.showMessageDialog(dialogDukkanaUrunEkle, "Toplam Adet kısmı boş veya hatalı giriş");
       //JOptionPane.showMessageDialog(dialogDukkanaUrunEkle, "Resim yolunu belirtiniz.");
      
         
         
    }//GEN-LAST:event_buttonDukkanaUrunEkleTamamActionPerformed

    private void textfieldDukkanaUrunModelIsmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldDukkanaUrunModelIsmiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldDukkanaUrunModelIsmiActionPerformed

    private void buttonDukkanaUrunModelResmiSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDukkanaUrunModelResmiSecActionPerformed

       
            haveApathName = dukkandakiUrunler.getPathWay(dialogDukkanaUrunEkle);
            System.out.println("dosya yolu ="+ haveApathName);
        
     
    }//GEN-LAST:event_buttonDukkanaUrunModelResmiSecActionPerformed

    private void tableDukkandakiUrunlerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDukkandakiUrunlerKeyTyped
        // TODO add your handling code here:
                  

    }//GEN-LAST:event_tableDukkandakiUrunlerKeyTyped

    private void tableDukkandakiUrunlerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDukkandakiUrunlerKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tableDukkandakiUrunlerKeyPressed

    private void tableDukkandakiUrunlerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDukkandakiUrunlerMousePressed
        // TODO add your handling code here:
         if(tableDukkandakiUrunler.isRowSelected(tableDukkandakiUrunler.getSelectedRow()))
       {
           Object[][] urunBilgileriDizisi = dukkandakiUrunler.getDukkandakiUrunBilgileri();
           Object[] secilenDizininResmi = urunBilgileriDizisi[tableDukkandakiUrunler.getSelectedRow()];
           String resimYolu = (String) secilenDizininResmi[5];
           ImageIcon resimDegistirIcon = new ImageIcon(resimYolu);
           if (resimDegistirIcon.getIconWidth() > labelUrunResim.getWidth())
            {
                resimDegistirIcon = new ImageIcon(resimDegistirIcon.getImage().getScaledInstance(
                    labelUrunResim.getWidth(), -1, Image.SCALE_DEFAULT));
  
        }       
           labelUrunResim.setIcon(resimDegistirIcon);
           dialogDukkandakiUrunler.pack();
       }
    }//GEN-LAST:event_tableDukkandakiUrunlerMousePressed

    private void tableDukkandakiUrunlerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDukkandakiUrunlerMouseClicked

        // TODO add your handling code here:
      
    }//GEN-LAST:event_tableDukkandakiUrunlerMouseClicked

    private void buttonDukkankadiUrunlerTabloSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDukkankadiUrunlerTabloSilActionPerformed

        if(modelDukkandakiUrunler.getRowCount()!=0)
        {
            System.out.println("textileproject.TextileProject.buttonDukkankadiUrunlerTabloSilActionPerformed()");
         dukkandakiUrunler.tablodanBirSutunSil(tableDukkandakiUrunler, modelDukkandakiUrunler,dialogDukkandakiUrunler,labelUrunResim);
        }else{
            JOptionPane.showMessageDialog(dialogDukkandakiUrunler, "Tablo boşken silme işlemi yapamazsınız");
        }
    }//GEN-LAST:event_buttonDukkankadiUrunlerTabloSilActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          if(table.getSelectedRow() !=-1)
    {
            model.removeRow(table.getSelectedRow());
            table.setModel(model);
        
    }    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dialogDukkandakiUrunlerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dialogDukkandakiUrunlerMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dialogDukkandakiUrunlerMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextileProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextileProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextileProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextileProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextileProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog KumasAdetDialog;
    private javax.swing.JDialog KumasEkleDialog;
    private javax.swing.JButton buttonAksesuarDurumu;
    private javax.swing.JButton buttonAksesuarEkle;
    private javax.swing.JButton buttonAksesuarTabloYukle;
    private javax.swing.JButton buttonAksesuarTamam;
    private javax.swing.JButton buttonDukkanaUrunEkleTamam;
    private javax.swing.JButton buttonDukkanaUrunModelResmiSec;
    private javax.swing.JButton buttonDukkandakiUruneModelEkle;
    private javax.swing.JButton buttonDukkandakiUrunler;
    private javax.swing.JButton buttonDukkankadiUrunlerTabloSil;
    private javax.swing.JButton buttonFotoDegistir;
    private javax.swing.JButton buttonKumasEkle;
    private javax.swing.JButton buttonKumasTopuEkle;
    private javax.swing.JButton buttonMaliyetHesaplama;
    private javax.swing.JButton buttonModelBilgileriDüzenle;
    private javax.swing.JButton buttonModelEkle;
    private javax.swing.JButton buttonModelMaliyetEkle;
    private javax.swing.JButton buttonModelSil;
    private javax.swing.JButton buttonTabloyuYükle;
    private javax.swing.JButton buttonTamamFermuar;
    private javax.swing.JComboBox<String> comboBoxAksesuarCesitleri;
    private javax.swing.JDialog dialogAksesuarDurumu;
    private javax.swing.JDialog dialogAksesuarEkle;
    private javax.swing.JDialog dialogDukkanaUrunEkle;
    private javax.swing.JDialog dialogDukkandakiUrunler;
    private javax.swing.JDialog dialogFermuarEkle;
    private javax.swing.JDialog dialogMaliyetHesaplama;
    private javax.swing.JDialog dialogModelEkleme;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelAksesuarMaliyet;
    private javax.swing.JLabel labelAksesuarSayisi;
    private javax.swing.JLabel labelAksesuarTuru;
    private javax.swing.JLabel labelAstarBirimFiyat;
    private javax.swing.JLabel labelDukkanaUrunBedenSayısı;
    private javax.swing.JLabel labelDukkanaUrunKumasTuru;
    private javax.swing.JLabel labelDukkanaUrunModelIsmi;
    private javax.swing.JLabel labelDukkanaUrunToplamAdet;
    private javax.swing.JLabel labelDukkandakiUrunModelResmi;
    private javax.swing.JLabel labelFasonMaliyet;
    private javax.swing.JLabel labelFermuarAdet;
    private javax.swing.JLabel labelFermuarBoyu;
    private javax.swing.JLabel labelFermuarRengi;
    private javax.swing.JLabel labelFermuarToplamFiyat;
    private javax.swing.JLabel labelGidenAstarFiyat;
    private javax.swing.JLabel labelGidenKumas;
    private javax.swing.JLabel labelGidenPolarFiyat;
    private javax.swing.JLabel labelKumasBirimFiyatUyarı;
    private javax.swing.JLabel labelKumasRengiGiriniz;
    private javax.swing.JLabel labelKumasTuruGiriniz;
    private javax.swing.JLabel labelModelIsmi;
    private javax.swing.JLabel labelPolarBirimFiyat;
    private javax.swing.JLabel labelRibanaVbFiyat;
    private javax.swing.JLabel labelUrunResim;
    private javax.swing.JPanel panelAksesuarDurumu;
    private javax.swing.JPanel panelModelEkleme;
    private javax.swing.JTable table;
    private javax.swing.JTable tableAksesuarlar;
    private javax.swing.JTable tableDukkandakiUrunler;
    private javax.swing.JTable tableModelBilgileri;
    private javax.swing.JButton tamamButon;
    private javax.swing.JTextField textFieldAksesuarFiyat;
    private javax.swing.JTextField textFieldAksesuarSayisi;
    private javax.swing.JTextField textFieldAksesuarTuru;
    private javax.swing.JTextField textFieldAstarBirimFiyat;
    private javax.swing.JTextField textFieldAstarMetreFiyat;
    private javax.swing.JTextField textFieldFasonFiyat;
    private javax.swing.JTextField textFieldFermuarAdet;
    private javax.swing.JTextField textFieldFermuarBoyu;
    private javax.swing.JTextField textFieldFermuarFiyat;
    private javax.swing.JTextField textFieldFermuarRengi;
    private javax.swing.JTextField textFieldKumasBirimFiyat;
    private javax.swing.JTextField textFieldKumasMetreFiyat;
    private javax.swing.JTextField textFieldKumasRengiAdi;
    private javax.swing.JTextField textFieldKumasSayisi;
    private javax.swing.JTextField textFieldKumasTuruAdi;
    private javax.swing.JTextField textFieldModelIsmi;
    private javax.swing.JTextField textFieldPolarBirimFiyat;
    private javax.swing.JTextField textFieldPolarMetreFiyat;
    private javax.swing.JTextField textFieldRibanaVbMaliyet;
    private javax.swing.JTextField textfieldDukkanaUrunBedenSayisi;
    private javax.swing.JTextField textfieldDukkanaUrunKumasTuru;
    private javax.swing.JTextField textfieldDukkanaUrunModelIsmi;
    private javax.swing.JTextField textfieldDukkanaUrunToplamAdet;
    // End of variables declaration//GEN-END:variables
 private DefaultTableModel model;
 private DefaultTableModel modelFermuar = new DefaultTableModel();
 private DefaultTableModel modelEtiket;
 private DefaultTableModel modelKart;
 private DefaultTableModel modelArma;
 private DefaultTableModel modelModelBilgi;
 private DefaultTableModel modelDukkandakiUrunler;
 private  File file = new File("topadet.dat");
 private  File fileFermuar = new File("fermuaradet.txt");
 private  File fileEtiket = new File("etiketadet.txt");
 private  File fileKart = new File("kartadet.txt");
 private  File fileArma = new File("armaAdet.txt");
 private  File fileModelBilgi = new File("modelBilgi.txt");
 private  File fileModelDuzenleBilgileri = new File("modelDuzenleBilgileri.txt");
 private final JFileChooser chooserlabel;
 private final Object [] KumasTopucolumns = {"Kumaş Türü","Kumaş Rengi","Kumaş Sayısı","Düzenlenme Tarihi"};
 private final Object [] columnsFermuar = {"Renk","Boy","Adet","Düzenlenme Tarihi"};
 private final Object [] columnsEtiket = {"Tür","Adet","Düzenlenme Tarihi"};
 private final Object [] columnsModel = {"Model İsmi","Maliyeti","Düzenlenme Tarihi"};
 private final Object [] columnsDukkandakiUrunler = {"Model Adı","Kumaş Türü","Beden Sayısı","Toplam Adet","Düzenlenme Tarihi"};
 private String getName;
 private String haveApathName;
 private int getIndex;
 private boolean fermuarYuklemeDurumu =true; ;
 private boolean etiketYuklemeDurumu =true;
 private boolean kartYuklemeDurumu =true;
 private boolean armaYuklemeDurumu =true;
 private boolean modelTableYuklemeDurumu = true;
 private boolean modelTableEkleEnable ;
 private boolean modelTableDüzenleEnable;
 private boolean butunBilgileriEldeEt;
 private boolean SilButonuAktiflikDurumu;
 private DukkandakiUrunler dukkandakiUrunler;
 private AksesuarDurumu aksesuarDurumu;

class WindowsFermuarListener implements WindowListener
{
private File files;
private DefaultTableModel models;

        public WindowsFermuarListener(File file,DefaultTableModel model)
                {
                    this.files = file;
                    this.models = model;
                    
        }
    

    @Override
    public void windowOpened(WindowEvent arg0) 
    {
         
    }

    @Override
    public void windowClosing(WindowEvent arg0) {
        System.out.println(files.getPath());
        for (int k = 0; k < models.getRowCount(); k++) {
                for (int l = 0; l < models.getColumnCount(); l++) {
                    
                    System.out.println(models.getValueAt(k, l));
                
                        
      if(models.getValueAt(k,l)!= null || !models.getValueAt(k,l).equals(""))
      {
         try{
      //  file = new File("C:\\Users\\H3RK3S\\Desktop\\TextileProject\\fermuaradet.txt");
        if(!files.exists())
        {
            
            files.createNewFile();
        }
    
            FileWriter fw = new FileWriter(files.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            if(models.getRowCount() !=0)
            {
            for (int i = 0; i < models.getRowCount(); i++) {
                for (int j = 0; j < models.getColumnCount(); j++) {
                    
                    bw.write(models.getValueAt(i, j).toString()+"tF3sjrG2dB");
                    
                }
                bw.newLine();
            }
            bw.close();
            fw.close();
            
        }}
        catch(IOException ex)
        {
        }
         catch(NullPointerException e)
         {
             
         }
      }
     
    }
        }}

    @Override
    public void windowClosed(WindowEvent arg0) {
    }

    @Override
    public void windowIconified(WindowEvent arg0) {
    }

    @Override
    public void windowDeiconified(WindowEvent arg0) {
    }

    @Override
    public void windowActivated(WindowEvent arg0) {
    }

    @Override
    public void windowDeactivated(WindowEvent arg0) {
    }
    
}
}